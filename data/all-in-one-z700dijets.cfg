#
# JetMET integration testing file for single fixed pt pions.
# Reconstruction for Jets and MET only.
#

process ALL  = {

untracked PSet maxEvents = {untracked int32 input = 5}


  include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "ERROR"
   replace MessageLogger.cerr.default.limit = 10
  
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 g4SimHits  = 11
	 untracked uint32 mix        = 12345   
	 untracked uint32 simEcalUnsuppressedDigis = 1234 
         untracked uint32 simHcalDigis = 1234
      }
   }

#service = Tracer { untracked string indention = "$$"}

  include "Configuration/JetMET/data/calorimetry-gen-Zprime_Dijets_700.cff"
   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
   replace VtxSmeared.SigmaX = 0.
   replace VtxSmeared.SigmaY = 0.
   replace VtxSmeared.SigmaZ = 0.

  include "Configuration/JetMET/data/calorimetry-simulation.cff"
  include "Configuration/JetMET/data/calorimetry-digitization.cff"
  include "Configuration/JetMET/data/calorimetry-reconstruction.cff"
  include "Configuration/JetMET/data/calorimetry-caltowers.cff"
  include "Configuration/JetMET/data/calorimetry-jetmet.cff"
  include "Configuration/JetMET/data/calorimetry-jetmet-gen.cff"
  include "Configuration/JetMET/data/calorimetry-jetmetcorrections.cff"


   service = TimerService { }
    module myTimer = Timer{
        // whether to include timing info about Timer itself
        untracked bool includeSelf = false
    }

  path p = {VtxSmeared, simulation, caloDigi, caloReco, caloTowersRec, caloJetMet, caloJetMetGen, caloJetMetCorrections, myTimer}

   module out = PoolOutputModule 
   { 
     untracked string fileName = "calorimetry-gen-Zprime_Dijets_700.root"
     untracked vstring outputCommands = {
     "drop *",
     "keep recoCaloJets_*_*_*",
     "keep recoCaloMETs_*_*_*",
     "keep recoGenJets_*_*_*",
     "keep recoGenMETs_*_*_*",
     "keep *_genParticlesAllStableNoNu_*_*",
     "keep *_genParticlesAllStable_*_*",
     "keep *_genParticlesForMET_*_*",
     "keep *_genParticleCandidates_*_*",
     "keep *_towerMaker_*_*",
     "keep *_caloTowers_*_*"
     }
    }

   endpath outpath = {out}

   schedule = {p,outpath}

}

